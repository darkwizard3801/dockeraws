step 1
//instal docker
sudo apt install docker.io

step 2
//create a directory and create a file named 'docker-compose.yml'
sudo mkdir 'directory_name' && sudo cd 'directory_name'
sudo nano docker-compose.yml

//inside the yml file paste the following

version: '3.8'

services:
  web:
    image: php:7.4-apache
    container_name: lamp_web
    ports:
      - "80:80"
    volumes:
      - ./www:/var/www/html  # Mount your application code
    depends_on:
      - db

  db:
    image: mysql:8.0  # Consider using a more recent MySQL version
    container_name: lamp_db
    environment:
      MYSQL_ROOT_PASSWORD: password  # Replace with a strong password
      MYSQL_DATABASE: sample  # Replace with your desired database name
      MYSQL_USER: user  # Replace with a database user name
      MYSQL_PASSWORD: password  # Replace with a strong password for the user
    volumes:
      - db_data:/var/lib/mysql  # Persistent storage for MySQL data

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: lamp_phpmyadmin
    depends_on:
      - db
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: password  # Use the same password set for MySQL root


volumes:
  db_data:

//End


step 3

// install the docker compose

# Add Docker's official GPG key:
sudo apt-get update
sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg -o /etc/apt/keyrings/docker.asc
sudo chmod a+r /etc/apt/keyrings/docker.asc

# Add the repository to Apt sources:
echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu \
  $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | \
  sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt-get update

sudo apt-get install docker-compose-plugin
//test docker compose
docker compose version




step 4
//run the yml file
sudo docker compose up -d

step 5

//install mysqli
//mysqli install on lamp_web
sudo docker exec -it lamp_web bash
docker-php-ext-install mysqli pdo pdo_mysql
exit
sudo docker restart lamp_web

step 6

//a www folder will appear on the project folder cd to it and create a index.php file inside it 
sudo nano index.php
//paste the following code
<?php

$servername = "172.18.0.2"; // Name of the MySQL service in docker-compose
$username = "root";
$password = "password";
$dbname = "sample";

// Create connection
$conn = new mysqli($servername, $username, $password, $dbname);

// Check connection
if ($conn->connect_error) {
  die("Connection failed: " + $conn->connect_error);
} else {
  echo "Connected successfully";
}

$conn->close();
?>

//for servername
sudo docker inspect -f '{{range.NetworkSettings.Networks}}{{.IPAddress}}{{end}}' lamp_db

step 6

copy the public ip of instance and paste it into the web browser

###After stoping the instance and starting the same instance later then

sudo docker restart lamp_db
sudo docker restart lamp_phpmyadmin
sudo docker restart lamp_web

//then find the severname of the server again and paste it inside the index.php file 
//copy the public ip of instance and paste it into the web browser
